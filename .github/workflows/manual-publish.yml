# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Manual WinGet Publishing

on:
  workflow_dispatch:
    inputs:
      release_url:
        description: "GitHub Release URL (e.g., https://github.com/danielmiessler/fabric/releases/tag/v1.4.302)"
        required: true
        type: string
      version:
        description: "Version to publish (optional, will be extracted from URL if not provided)"
        required: false
        type: string

jobs:
  manual-publish:
    runs-on: windows-latest

    steps:
      - name: Parse Release Information
        id: parse
        run: |
          URL="${{ github.event.inputs.release_url }}"
          VERSION="${{ github.event.inputs.version }}"

          # Extract tag from URL if version not provided
          if [ -z "$VERSION" ]; then
            # Extract tag from URL like https://github.com/danielmiessler/fabric/releases/tag/v1.4.302
            TAG=$(echo $URL | sed 's/.*\/tag\///')
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "Using extracted tag: $TAG"
          else
            echo "tag=$VERSION" >> $GITHUB_OUTPUT
            echo "Using provided version: $VERSION"
          fi

          echo "url=$URL" >> $GITHUB_OUTPUT
        shell: bash

      - name: Validate Inputs
        run: |
          if [ -z "${{ steps.parse.outputs.tag }}" ]; then
            echo "Error: Could not determine version/tag to publish"
            exit 1
          fi

          echo "Publishing version: ${{ steps.parse.outputs.tag }}"
          echo "From release URL: ${{ steps.parse.outputs.url }}"
        shell: bash

      - name: Checkout winget-pkgs fork
        uses: actions/checkout@v4
        with:
          repository: ksylvan/winget-pkgs
          token: ${{ secrets.WINGET_TOKEN }}
          path: winget-pkgs

      - name: Install Komac
        run: |
          cargo binstall komac -y
        shell: pwsh

      - name: Update WinGet manifest
        run: |
          $tag = "${{ steps.parse.outputs.tag }}"
          $version = $tag -replace '^v', ''
          
          # Get release info from danielmiessler/fabric
          $releaseInfo = Invoke-RestMethod -Uri "https://api.github.com/repos/danielmiessler/fabric/releases/tags/$tag"
          $windowsAssets = $releaseInfo.assets | Where-Object { $_.name -match '\.(exe|msi|msix|appx)$' }
          
          if ($windowsAssets.Count -eq 0) {
            Write-Error "No Windows installer assets found for $tag"
            exit 1
          }
          
          $urls = ($windowsAssets | ForEach-Object { $_.browser_download_url }) -join ' '
          Write-Host "Found Windows assets: $urls"
          
          # Update manifest using Komac
          komac update --identifier danielmiessler.Fabric --version $version --urls $urls --submit
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.WINGET_TOKEN }}
